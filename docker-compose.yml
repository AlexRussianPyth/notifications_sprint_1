version: '3.4'

services:
  rabbitmq:
    image: rabbitmq:3.10-management
    container_name: rabbitmq
    environment:
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: "-rabbit heartbeat 3600"
    ports:
      - 127.0.0.1:5672:5672
      - 127.0.0.1:15672:15672
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  templates_db:
    image: postgres:15.0-alpine
    container_name: templates-db
    volumes:
      - postgres_volume:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}:5432
  
  render:
    container_name: render
    build: render_engine/
    depends_on:
      - rabbitmq
    env_file:
      - .env

  rabbit_api:
    build:
      context: ./rabbit_api/
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - "8000:8000"

  notifications-db:
    container_name: notifications-db
    image: postgres:15.0-alpine
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${NOTIFICATION_DB}
      - POSTGRES_USER=${NOTIFICATION_USER}
      - POSTGRES_PASSWORD=${NOTIFICATION_PASSWORD}
      - POSTGRES_PORT=${NOTIFICATION_PORT}:5432
    volumes:
      - notifications_db_volume:/var/lib/postgresql/data
      # Скрипт для инициализации таблицы в БД
      - ./sender/src/db/sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql

  email-sender:
    container_name: email-sender
    build: sender/
    env_file:
      - ./.env
    depends_on:
      - rabbitmq
      - notifications-db

volumes:
  postgres_volume:
  notifications_db_volume:

networks:
  default:
    name: graduate_network
    external: true